{"ast":null,"code":"export const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders/add/`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/john/projects/ecom/frontend/src/actions/orderActions.js"],"names":["createOrder","order","dispatch","getState","type","ORDER_CREATE_REQUEST","userLogin","userInfo","config","headers","Authorization","token","data","axios","post","ORDER_CREATE_SUCCESS","payload","CART_CLEAR_ITEMS","localStorage","removeItem","error","ORDER_CREATE_FAIL","response","detail","message"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAI;AACAD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEC;AADD,KAAD,CAAR;AAIA,UAAM;AACFC,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADT,QAEFJ,QAAQ,EAFZ;AAIA,UAAMK,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMC,KAAK,CAACC,IAAN,CAClB,kBADkB,EAEnBb,KAFmB,EAGnBO,MAHmB,CAAvB;AAMAN,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEW,oBADD;AAELC,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAKAV,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEa,gBADD;AAELD,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAKAM,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AAGH,GAnCD,CAmCE,OAAOC,KAAP,EAAc;AACZlB,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEiB,iBADD;AAELL,MAAAA,OAAO,EAAEI,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeV,IAAf,CAAoBW,MAAtC,GACHH,KAAK,CAACE,QAAN,CAAeV,IAAf,CAAoBW,MADjB,GAEHH,KAAK,CAACI;AAJP,KAAD,CAAR;AAMH;AACJ,CA5CM","sourcesContent":["export const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}