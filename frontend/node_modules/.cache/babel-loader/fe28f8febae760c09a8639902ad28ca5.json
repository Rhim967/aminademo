{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducers, productDetailsReducers } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducers, userRegisterReducers, userDetailsReducers, userUpdateProfileReducers } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducers,\n  productDetails: productDetailsReducers,\n  cart: cartReducer,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userDetails: userDetailsReducers,\n  userUpdateProfile: userUpdateProfileReducers,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer\n});\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/john/projects/ecom/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducers","productDetailsReducers","cartReducer","userLoginReducers","userRegisterReducers","userDetailsReducers","userUpdateProfileReducers","orderCreateReducer","orderDetailsReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","cartItemFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,mBAAT,EAA8BC,sBAA9B,QAA4D,4BAA5D;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,mBAAlD,EAAuEC,yBAAvE,QAAwG,yBAAxG;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,0BAAxD;AAEA,MAAMC,OAAO,GAAGb,eAAe,CAAC;AAC5Bc,EAAAA,WAAW,EAAEV,mBADe;AAE5BW,EAAAA,cAAc,EAAEV,sBAFY;AAI5BW,EAAAA,IAAI,EAAEV,WAJsB;AAM5BW,EAAAA,SAAS,EAAEV,iBANiB;AAO5BW,EAAAA,YAAY,EAAEV,oBAPc;AAQ5BW,EAAAA,WAAW,EAAEV,mBARe;AAS5BW,EAAAA,iBAAiB,EAAEV,yBATS;AAW5BW,EAAAA,WAAW,EAAEV,kBAXe;AAY5BW,EAAAA,YAAY,EAAEV;AAZc,CAAD,CAA/B;AAgBA,MAAMW,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADwB,GACwB,EADpD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACuB,IADnD;AAGA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GACuB,EAD1D;AAGA,MAAMK,YAAY,GAAG;AACjBd,EAAAA,IAAI,EAAE;AACFe,IAAAA,SAAS,EAAER,mBADT;AAEFS,IAAAA,eAAe,EAAEH;AAFf,GADW;AAKjBZ,EAAAA,SAAS,EAAE;AAACgB,IAAAA,QAAQ,EAAEL;AAAX;AALM,CAArB;AAQA,MAAMM,UAAU,GAAG,CAAChC,KAAD,CAAnB;AAEA,MAAMiC,KAAK,GAAGpC,WAAW,CAACc,OAAD,EAAUiB,YAAV,EACrB3B,mBAAmB,CAACF,eAAe,CAAC,GAAGiC,UAAJ,CAAhB,CADE,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { productListReducers, productDetailsReducers } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducers, userRegisterReducers, userDetailsReducers, userUpdateProfileReducers } from './reducers/userReducers'\nimport { orderCreateReducer, orderDetailsReducer } from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducers,\n    productDetails: productDetailsReducers,\n\n    cart: cartReducer,\n\n    userLogin: userLoginReducers,\n    userRegister: userRegisterReducers,\n    userDetails: userDetailsReducers,\n    userUpdateProfile: userUpdateProfileReducers,\n    \n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer\n\n})\n\nconst cartItemFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemFromStorage,\n        shippingAddress: shippingAddressFromStorage\n    },\n    userLogin: {userInfo: userInfoFromStorage}\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, \n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}