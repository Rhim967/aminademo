{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRES, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'; // adding items to cart-----------------------------------------------------------------------------------------------------------------\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data.id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}; // removing items from cart---------------------------------------------------------------------------------------------------------------\n\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}; // saving shipping address----------------------------------------------------------------------------------------------------------------\n\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRES,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n}; // saving payment method-------------------------------------------------------------------------------------------------------------------\n\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};","map":{"version":3,"sources":["/home/john/projects/ecom/frontend/src/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRES","CART_SAVE_PAYMENT_METHOD","addToCart","id","qty","dispatch","getState","data","get","type","payload","product","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,aADJ,EAEIC,gBAFJ,EAGIC,yBAHJ,EAKIC,wBALJ,QAMO,4BANP,C,CAQA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMV,KAAK,CAACW,GAAN,CAAW,iBAAgBL,EAAG,EAA9B,CAArB;AAEAE,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEX,aADD;AAELY,IAAAA,OAAO,EAAC;AACJC,MAAAA,OAAO,EAAEJ,IAAI,CAACJ,EADV;AAEJS,MAAAA,IAAI,EAAEL,IAAI,CAACK,IAFP;AAGJC,MAAAA,KAAK,EAAEN,IAAI,CAACM,KAHR;AAIJC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAJR;AAKJC,MAAAA,YAAY,EAAER,IAAI,CAACQ,YALf;AAMJX,MAAAA;AANI;AAFH,GAAD,CAAR;AAWAY,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeb,QAAQ,GAAGc,IAAX,CAAgBC,SAA/B,CAAlC;AACH,CAfM,C,CAiBP;;AACA,OAAO,MAAMC,cAAc,GAAInB,EAAD,IAAQ,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC1DD,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEV,gBADD;AAELW,IAAAA,OAAO,EAAEP;AAFJ,GAAD,CAAR;AAIAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeb,QAAQ,GAAGc,IAAX,CAAgBC,SAA/B,CAAlC;AACH,CANM,C,CAQP;;AACA,OAAO,MAAME,mBAAmB,GAAIhB,IAAD,IAAWF,QAAD,IAAc;AACvDA,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAET,yBADD;AAELU,IAAAA,OAAO,EAAEH;AAFJ,GAAD,CAAR;AAIAS,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAxC;AACH,CANM,C,CAQP;;AACA,OAAO,MAAMiB,iBAAiB,GAAIjB,IAAD,IAAWF,QAAD,IAAc;AACrDA,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAER,wBADD;AAELS,IAAAA,OAAO,EAAEH;AAFJ,GAAD,CAAR;AAIAS,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAtC;AACH,CANM","sourcesContent":["import axios from 'axios'\nimport { \n    CART_ADD_ITEM, \n    CART_REMOVE_ITEM, \n    CART_SAVE_SHIPPING_ADDRES,\n\n    CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\n// adding items to cart-----------------------------------------------------------------------------------------------------------------\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const {data} = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload:{\n            product: data.id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty \n        }\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n// removing items from cart---------------------------------------------------------------------------------------------------------------\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n// saving shipping address----------------------------------------------------------------------------------------------------------------\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRES,\n        payload: data,\n    })\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\n// saving payment method-------------------------------------------------------------------------------------------------------------------\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}