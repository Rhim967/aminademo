{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/orderReducers.js","reducers/cartReducers.js","i18n.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","components/CheckoutSteps.js","screens/PaymentScreen.js","screens/ShippingScreen.js","screens/PlaceOrderScreen.js","actions/orderActions.js","screens/OrderScreen.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/UserListScreen.js","screens/OrderListScreen.js","screens/ProductListScreen.js","screens/UserEditScreen.js","screens/ProductEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRES","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAIL_REQUEST","ORDER_DETAIL_SUCCESS","ORDER_DETAIL_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderListMy","orders","orderList","orderDetails","orderItems","shippingAddress","orderPay","orderDeliver","cart","cartItems","shippingAddres","item","existItem","find","x","map","filter","paymentMethod","cartItemFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","resources","en","translation","ru","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","console","log","push","location","pathname","Control","style","display","width","size","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useTranslation","t","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Nav","Link","reduce","acc","qty","Toggle","aria-controls","Collapse","isAdmin","NavDropdown","title","Item","onClick","removeItem","Footer","Row","Col","Rating","text","color","Product","Card","_id","CardImg","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","margin","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","Select","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","toFixed","FormContainer","CheckoutSteps","step1","step2","step3","step4","PaymentScreen","setPaymentMethod","address","Check","label","checked","ShippingScreen","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","placeholder","PlaceOrderScreen","itemsPrice","shipingPrice","taxPrice","totalPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","isPaid","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","email","isDelivered","deliveredAt","paidAt","amount","onSuccess","paymentResult","put","payOrder","deliverOrder","LoginScreen","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","updateUserProfile","Table","striped","responsive","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","dordered","hover","OrderListScreen","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","float","category","brand","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","readOnly","custom","multiple","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9d21e0bd.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRES = 'CART_SAVE_SHIPPING_ADDRES'\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_FAIL'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAIL_REQUEST = 'ORDER_DETAIL_REQUEST'\nexport const ORDER_DETAIL_SUCCESS = 'ORDER_DETAIL_SUCCESS'\nexport const ORDER_DETAIL_FAIL = 'ORDER_DETAIL_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { \n    productListReducers, \n    productDetailsReducers, \n    productDeleteReducers, \n    productCreateReducers,\n    productUpdateReducers,\n    productReviewCreateReducers,\n    productTopRatedReducers \n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { \n    userLoginReducers,\n    userRegisterReducers, \n    userDetailsReducers, \n    userUpdateProfileReducers, \n    userListReducers, \n    userDeleteReducers,  \n    userUpdateReducers, \n} from './reducers/userReducers'\nimport {\n    orderCreateReducer, \n    orderDetailsReducer, \n    orderPayReducer, \n    orderListMyReducer,  \n    orderListReducer,\n    orderDeliverReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducers,\n    productDetails: productDetailsReducers,\n    productDelete: productDeleteReducers, \n    productCreate: productCreateReducers,\n    productUpdate: productUpdateReducers,\n    productReviewCreate: productReviewCreateReducers,\n    productTopRated: productTopRatedReducers,\n\n    userLogin: userLoginReducers,\n    userRegister: userRegisterReducers,\n    userDetails: userDetailsReducers,\n    userUpdateProfile: userUpdateProfileReducers,\n    userList: userListReducers,\n    userDelete: userDeleteReducers,\n    userUpdate: userUpdateReducers,\n\n    orderCreate: orderCreateReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderDeliver: orderDeliverReducer,\n\n    cart: cartReducer,\n})\n\nconst cartItemFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemFromStorage,\n        shippingAddress: shippingAddressFromStorage\n    },\n    userLogin: {userInfo: userInfoFromStorage}\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, \n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store\n\n\n\n\n\n\n","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\n\nexport const productListReducers = (state={products:[]}, action) => {\n    switch(action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return {loading:true, products:[]}\n\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading:false, \n                products: action.payload.products, \n                page:action.payload.page, \n                pages:action.payload.pages\n            }\n\n        case PRODUCT_LIST_FAIL:\n            return {loading:false, error: action.payload}\n\n        default:\n            return state\n    }\n}\n\n// reduce for detail product\nexport const productDetailsReducers = (state={product:{reviews:[]}}, action) => {\n    switch(action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return {loading:true, ...state}\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return {loading:false, product: action.payload}\n\n        case PRODUCT_DETAILS_FAIL:\n            return {loading:false, error: action.payload}\n\n        default:\n            return state\n    }\n}\n\n// reduce for delete product\nexport const productDeleteReducers = (state={}, action) => {\n    switch(action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return {loading:true,}\n\n        case PRODUCT_DELETE_SUCCESS:\n            return {loading:false, success: true}\n\n        case PRODUCT_DELETE_FAIL:\n            return {loading:false, error: action.payload}\n\n        default:\n            return state\n    }\n}\n\n// reduce for creating product\nexport const productCreateReducers = (state={}, action) => {\n    switch(action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return {loading:true,}\n\n        case PRODUCT_CREATE_SUCCESS:\n            return {loading:false, success: true, product:action.payload}\n\n        case PRODUCT_CREATE_FAIL:\n            return {loading:false, error: action.payload}\n\n        case PRODUCT_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n// reduce for updating product\nexport const productUpdateReducers = (state={product:{}}, action) => {\n    switch(action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return {loading:true,}\n\n        case PRODUCT_UPDATE_SUCCESS:\n            return {loading:false, success: true, product:action.payload}\n\n        case PRODUCT_UPDATE_FAIL:\n            return {loading:false, error: action.payload}\n\n        case PRODUCT_UPDATE_RESET:\n            return {product:{}}\n\n        default:\n            return state\n    }\n}\n\n// reduce for create review product\nexport const productReviewCreateReducers = (state={}, action) => {\n    switch(action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return {loading:true,}\n\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return {loading:false, success: true}\n\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return {loading:false, error: action.payload}\n\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n// reduce for top products\nexport const productTopRatedReducers = (state={products:[]}, action) => {\n    switch(action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return {loading:true, products:[]}\n\n        case PRODUCT_TOP_SUCCESS:\n            return {loading:false, products:action.payload}\n\n        case PRODUCT_TOP_FAIL:\n            return {loading:false, error: action.payload}\n\n        default:\n            return state\n    }\n}\n","import { \n    USER_LOGIN_REQUEST, \n    USER_LOGIN_SUCCESS ,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST, \n    USER_REGISTER_SUCCESS ,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST, \n    USER_DETAILS_SUCCESS ,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST, \n    USER_LIST_SUCCESS ,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST, \n    USER_DELETE_SUCCESS ,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST, \n    USER_UPDATE_SUCCESS ,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n} from '../constants/userConstants'\n\n\n// Users logging\nexport const userLoginReducers = (state={  }, action) => {\n    switch(action.type) {\n        case USER_LOGIN_REQUEST:\n            return {loading:true }\n\n        case USER_LOGIN_SUCCESS:\n            return {loading:false, userInfo: action.payload}\n\n        case USER_LOGIN_FAIL:\n            return {loading:false, error: action.payload}\n\n        case USER_LOGOUT:\n            return { }\n\n        default:\n            return state\n    }\n}\n\n//Users registration\nexport const userRegisterReducers = (state={  }, action) => {\n    switch(action.type) {\n        case USER_REGISTER_REQUEST:\n            return {loading:true }\n\n        case USER_REGISTER_SUCCESS:\n            return {loading:false, userInfo: action.payload}\n\n        case USER_REGISTER_FAIL:\n            return {loading:false, error: action.payload}\n\n        case USER_LOGOUT:\n            return { }\n\n        default:\n            return state\n    }\n}\n\n// Users details\nexport const userDetailsReducers = (state={ user: {} }, action) => {\n    switch(action.type) {\n        case USER_DETAILS_REQUEST:\n            return {...state, loading:true }\n\n        case USER_DETAILS_SUCCESS:\n            return {loading:false, user: action.payload}\n\n        case USER_DETAILS_FAIL:\n            return {loading:false, error: action.payload}\n\n        case USER_DETAILS_RESET:\n            return {user: {}}\n\n        default:\n            return state\n    }\n}\n\n// Users update_profile\nexport const userUpdateProfileReducers = (state={ }, action) => {\n    switch(action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading:true }\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return {loading:false, success:true, userInfo: action.payload}\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return {loading:false, error: action.payload}\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n// displaing all of our users\nexport const userListReducers = (state={ users:[] }, action) => {\n    switch(action.type) {\n        case USER_LIST_REQUEST:\n            return { loading:true }\n\n        case USER_LIST_SUCCESS:\n            return {loading:false, users: action.payload}\n\n        case USER_LIST_FAIL:\n            return {loading:false, error: action.payload}\n\n        case USER_LIST_RESET:\n            return { users:[] }\n\n        default:\n            return state\n    }\n}\n\n\n// detetion users by id\nexport const userDeleteReducers = (state={ }, action) => {\n    switch(action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_DELETE_SUCCESS:\n            return {loading: false, success: true}\n\n        case USER_DELETE_FAIL:\n            return {loading: false, error: action.payload}\n\n        default:\n            return state\n    }\n}\n\n// updating users by id\nexport const userUpdateReducers = (state={ user:{} }, action) => {\n    switch(action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return {loading: false, success: true}\n\n        case USER_UPDATE_FAIL:\n            return {loading: false, error: action.payload}\n\n        case USER_UPDATE_RESET:\n            return { user: {} }\n\n        default:\n            return state\n    }\n}\n","import { \n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_CREATE_RESET,\n\n    ORDER_DETAIL_REQUEST,\n    ORDER_DETAIL_SUCCESS,\n    ORDER_DETAIL_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n } from '../constants/orderConstants'\n\n // for creating orders -------------------------------------------------------------------------------------------------------------------\n export const orderCreateReducer = (state={}, action) => {\n     switch (action.type){\n        case ORDER_CREATE_REQUEST:\n            return{\n                loading: true,\n            }\n\n        case ORDER_CREATE_SUCCESS:\n            return{\n                loading: false,\n                success: true,\n                order: action.payload\n\n            }\n\n        case ORDER_CREATE_FAIL:\n            return{\n                loading: false,\n                error: action.payload\n\n            }\n\n        case ORDER_CREATE_RESET:\n            return{\n                \n            }\n\n        default:\n            return state\n     }\n }\n\n // for displaing details orders ----------------------------------------------------------------------------------------------------------\nexport const orderDetailsReducer = (state={loading:true, orderItems:[], shippingAddress:{}}, action) => {\n    switch (action.type){\n       case ORDER_DETAIL_REQUEST:\n           return{\n               ...state,\n               loading: true,\n           }\n\n       case ORDER_DETAIL_SUCCESS:\n           return{\n               loading: false,\n               order: action.payload\n\n           }\n\n       case ORDER_DETAIL_FAIL:\n           return{\n               loading: false,\n               error: action.payload\n\n           }\n\n       default:\n           return state\n    }\n}\n\n // for change pyament status of orders ---------------------------------------------------------------------------------------------------\nexport const orderPayReducer = (state={}, action) => {\n    switch (action.type){\n       case ORDER_PAY_REQUEST:\n           return{\n               loading: true,\n           }\n\n       case ORDER_PAY_SUCCESS:\n           return{\n               loading: false,\n               success: true\n           }\n\n       case ORDER_PAY_FAIL:\n           return{\n               loading: false,\n               error: action.payload\n           }\n\n       case ORDER_PAY_RESET:\n           return{}\n\n       default:\n           return state\n    }\n}\n\n // for change deliver status of orders ---------------------------------------------------------------------------------------------------\nexport const orderDeliverReducer = (state={}, action) => {\n    switch (action.type){\n       case ORDER_DELIVER_REQUEST:\n           return{\n               loading: true,\n           }\n\n       case ORDER_DELIVER_SUCCESS:\n           return{\n               loading: false,\n               success: true\n           }\n\n       case ORDER_DELIVER_FAIL:\n           return{\n               loading: false,\n               error: action.payload\n           }\n\n       case ORDER_DELIVER_RESET:\n           return{}\n\n       default:\n           return state\n    }\n}\n\n // for all orders of user ---------------------------------------------------------------------------------------------------------------\nexport const orderListMyReducer = (state={orders:[]}, action) => {\n    switch (action.type){\n       case ORDER_LIST_MY_REQUEST:\n           return{\n               loading: true,\n           }\n\n       case ORDER_LIST_MY_SUCCESS:\n           return{\n               loading: false,\n               orders: action.payload\n           }\n\n       case ORDER_LIST_MY_FAIL:\n           return{\n               loading: false,\n               error: action.payload\n           }\n\n       case ORDER_LIST_MY_RESET:\n            return{orders:[]}\n\n       default:\n           return state\n    }\n}\n\n // for all orders of user ---------------------------------------------------------------------------------------------------------------\nexport const orderListReducer = (state={orders:[]}, action) => {\n    switch (action.type){\n       case ORDER_LIST_REQUEST:\n           return{\n               loading: true,\n           }\n\n       case ORDER_LIST_SUCCESS:\n           return{\n               loading: false,\n               orders: action.payload\n           }\n\n       case ORDER_LIST_FAIL:\n           return{\n               loading: false,\n               error: action.payload\n           }\n\n       default:\n           return state\n    }\n}\n\n","import { \n    CART_ADD_ITEM, \n    CART_REMOVE_ITEM, \n    CART_SAVE_SHIPPING_ADDRES,\n\n    CART_SAVE_PAYMENT_METHOD,\n\n    CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\n\n\nexport const cartReducer = (state = {cartItems:[], shippingAddres: {} }, action) => {\n    switch(action.type){\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product ===item.product)\n\n            if(existItem){\n                return {\n                    ...state,\n                    cartItems:state.cartItems.map(x => \n                        x.product === existItem.product ? item : x)\n                }\n            }else{\n                return{\n                    ...state,\n                    cartItems:[...state.cartItems, item]\n                }\n            }\n        \n        case CART_REMOVE_ITEM:\n            return{\n                ...state,\n                cartItems:state.cartItems.filter(x => x.product !== action.payload)\n            }\n            \n        case CART_SAVE_SHIPPING_ADDRES:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n\n        case CART_CLEAR_ITEMS:\n            return {\n                ...state,\n                cartItems: []\n            }\n\n        default:\n            return state\n    }\n}","import i18n from 'i18next'\nimport {initReactI18next} from 'react-i18next'\n\nimport translationEN from './langs/en/translationEN.json'\nimport translationRU from './langs/ru/translationRU.json'\n\n// the translation\nconst resources = {\n    en: {\n        translation: translationEN\n    },\n    ru: {\n      translation: translationRU\n  }\n};\n\ni18n\n    .use(initReactI18next) //passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: 'ru',\n\n        keySeparator: false, // we don't use keys in form message.welcome // might be i'm using that\n\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        }\n    });\nexport default i18n\n\n\n","import React, {useState}  from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\n\nfunction SearchBox () {\n\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(keyword){\n            console.log(keyword)\n            history.push(`/?keyword=${keyword}&page=1`)\n        }else{\n            history.push(history.push(history.location.pathname))\n        }\n    }\n\n    return (\n        <Form  onSubmit={submitHandler} >\n            <Form.Control\n                style={{display:'inline-block', width: 'auto'}}\n                size='sm'\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n            >\n            </Form.Control>\n\n            <Button\n                type='submit'\n                variant='outline-success'\n                className='p-1 m-2'\n            >\n                <i className='fas fa-search'></i>\n            </Button>\n        </Form> \n    )\n}\n\nexport default SearchBox\n \n","import axios from 'axios'\n\nimport { \n    USER_LOGIN_REQUEST, \n    USER_LOGIN_SUCCESS ,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST, \n    USER_REGISTER_SUCCESS ,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST, \n    USER_DETAILS_SUCCESS ,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    //USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST, \n    USER_LIST_SUCCESS ,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST, \n    USER_DELETE_SUCCESS ,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST, \n    USER_UPDATE_SUCCESS ,\n    USER_UPDATE_FAIL,\n} from '../constants/userConstants'\n\nimport {\n    ORDER_LIST_MY_RESET,\n\n} from '../constants/orderConstants'\n\n// logic for log In\nexport const login = (email, password) => async (dispatch) => {\n\n    try{\n        \n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            'api/users/login/',\n            {'username': email, 'password': password},\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n        \n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// logic for log Out\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    //that's maight be wrong---------------------------\n    localStorage.removeItem('cartItems');\n    localStorage.removeItem('shippingAddress');\n    localStorage.removeItem('paymentMethod');\n    \n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET})\n    dispatch({ type: USER_LIST_RESET})\n}\n\n// logging for registration\nexport const register = (name, email, password) => async (dispatch) => {\n\n    try{\n        \n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            'api/users/register/',\n            {'name':name, 'email': email, 'password': password},\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload:data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n        \n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n// logging for details\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload:data\n        })\n\n\n\n    }catch(error){\n        \n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// logging for updadeProfile\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.put(\n            `api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,  //maight be it shuld be (USER_UPDATE_PROFILE_RESET)\n            payload:data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n\n    }catch(error){\n        \n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n// displaing all our users for admin\nexport const listUsers = () => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,  //maight be it shuld be (USER_LIST_RESET)\n            payload: data\n        })\n\n\n    }catch(error){\n        \n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n// deletion user by id\nexport const deleteUser = (id) => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,  //maight be it shuld be (USER_DELETE_RESET)\n            payload: data\n        })\n\n\n    }catch(error){\n        \n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// updating user by id\nexport const updateUser = (user) => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,  //maight be it shuld be (USER_UPDATE_RESET)\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,  //maight be it shuld be (USER_UPDATE_RESET)\n            payload: data\n        })\n\n    }catch(error){\n        \n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n","import { Container, Form, Row, Navbar, Nav, NavDropdown, Button } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector} from 'react-redux'\nimport{ useTranslation } from 'react-i18next'\nimport { i18n } from '../i18n'\n\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\n\nimport React from 'react'\n\nfunction Header() {\n    const {t, i18n} = useTranslation()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const cart = useSelector(state => state.cart)\n    const {cartItems} = cart \n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    const changeLang = (ln) => {\n        return () => {\n            i18n.changeLang(ln)\n            console.log(`language has changed to ${ln}`)\n        }\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'> \n                        <Navbar.Brand >Amina Shop</Navbar.Brand>\n                    </LinkContainer>\n                    <Nav id='mobile_nav'>\n                        <LinkContainer id='cart_mobile' to='/cart'>\n                            <Nav.Link>\n                                <i className=\"fas fa-shopping-cart\"></i>({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                            </Nav.Link>\n                        </LinkContainer>\n                            \n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    </Nav>\n                    <Navbar.Collapse  id=\"basic-navbar-nav\">\n                        <SearchBox />\n                        <Nav className=\"me-auto\">\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title={t('admin')} id='adminmenue'>\n                                        <LinkContainer to='/admin/userlist'>\n                                            <NavDropdown.Item>{t('users')}</NavDropdown.Item>\n                                        </LinkContainer>\n\n                                        <LinkContainer to='/admin/productlist'>\n                                            <NavDropdown.Item>{t('products')}</NavDropdown.Item>\n                                        </LinkContainer>\n\n                                        <LinkContainer to='/admin/orderlist'>\n                                            <NavDropdown.Item>{t('orders')}</NavDropdown.Item>\n                                        </LinkContainer>\n                                    </NavDropdown>\n                                )}\n                        </Nav>\n\n                        <Nav>\n                            <LinkContainer id='cart_desktop' to='/cart'>\n                                <Nav.Link>\n                                    <i className=\"fas fa-shopping-cart\"></i>({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                                </Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>{t('profile')}</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>{t('logout')}</NavDropdown.Item>\n                                </NavDropdown>\n                            ): (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>{t('login')}</Nav.Link>\n                                    </LinkContainer>\n                                )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import { Container, Row, Col  } from 'react-bootstrap'\n\n\nimport React from 'react'\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py3\">Copyright &copy; AminaShop</Col>\n                </Row>\n            </Container>    \n        </footer>\n    )\n}\n\nexport default Footer\n","import React  from 'react'\n\nfunction Rating ( {value, text, color} ) {\n\n\n    return (\n\n        <div className=\"rating\" >\n            <span>\n                <i style={{color}} className={\n                    value >= 1\n                        ? 'fas fa-star'\n                        : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>  \n                </i>\n            </span>\n\n            <span>\n                <i style={{color}} className={\n                    value >= 2\n                        ? 'fas fa-star'\n                        : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>  \n                </i>\n            </span>\n            \n            <span>\n                <i style={{color}} className={\n                    value >= 3\n                        ? 'fas fa-star'\n                        : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>  \n                </i>\n            </span>\n\n            <span>\n                <i style={{color}} className={\n                    value >= 4\n                        ? 'fas fa-star'\n                        : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>  \n                </i>\n            </span>\n\n            <span>\n                <i style={{color}} className={\n                    value >= 5\n                        ? 'fas fa-star'\n                        : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>  \n                </i>\n            </span>\n\n            <span>{text && text}</span>\n\n</div> \n\n    )\n}\n\nexport default Rating\n  \n","import React from 'react'\nimport {Card, CardImg} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport Rating from './Rating'\nfunction Product({ product }) {\n    return (\n            <Card className=\"my-3 p-3 rounded\">\n                <Link to={`/product/${product._id}`}>\n                    <CardImg src={product.image}/>\n                </Link>\n                <Card.Body>\n                    <Link to={`/product/${product._id}`}>\n                        <Card.Title as='div'>\n                            <strong>{product.name}</strong>\n                        </Card.Title>\n                    </Link>\n                    <Card.Text as='div'>\n                        <div className='my-3'>\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\n                        </div>\n                    </Card.Text>\n                    <Card.Text as='h3'>\n                        ${product.price}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '100px',\n                width: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            <span className='sr-only'>Loadin...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({variant, children}) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return (pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map((x) => (\n                <LinkContainer\n                    key={x + 1}\n                    to={!isAdmin ?\n                        `/?keyword=${keyword}&page=${x + 1}`\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\n                    }\n                >\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n    )\n}\n\nexport default Paginate\n","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\n\n\nimport axios from 'axios'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// action for top rated products ----------------------------------------------------------------------------------------------------------\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// action for product details\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}/`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// for delete products by id -------------------------------------------------------------------------------------------------------------\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    }catch(error){\n        \n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// for create products by id -------------------------------------------------------------------------------------------------------------\nexport const createProduct = () => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n\n\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data\n        })\n\n\n    }catch(error){\n        \n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// for update products by id -------------------------------------------------------------------------------------------------------------\nexport const updateProduct = (product) => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n\n\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({ \n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    }catch(error){\n        \n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// for create review products ------------------------------------------------------------------------------------------------------------\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n\n\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data\n        })\n\n    }catch(error){\n        \n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n","import React, {useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport {listTopProducts} from '../actions/productActions'\n\nfunction ProductCarousel() {\n    const dispatch = useDispatch()\n\n    const productTopRated = useSelector(state => state.productTopRated )\n\n    const {error, loading, products} = productTopRated \n\n    useEffect(() => {\n        dispatch(listTopProducts())\n    }, [dispatch])\n\n    return (\n        loading ? <Loader />\n        : error\n        ? <Message variant='danger'>{error}</Message>\n        : (\n            <Carousel pause='hover' className='bg-dark'>\n                {products.map(product => (\n                    <Carousel.Item key={product._id}>\n                        <Link to={`/product/${product._id}`}>\n                            <Image src={product.image} alt={product.name} fluid/>\n                            <Carousel.Caption className='carousel.caption'>\n                                <h4>{product.name} ($ {product.price})</h4>\n                            </Carousel.Caption>\n                        </Link>\n                    </Carousel.Item>\n                ))}\n            </Carousel>\n        )\n    )\n}\n\nexport default ProductCarousel\n","import React, {useEffect} from 'react' // useState\nimport{ useTranslation } from 'react-i18next'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {Row, Col} from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\n\nimport { listProducts } from '../actions/productActions'\n\n\n\nfunction HomeScreen({history}) {\n    const {t, i18n} = useTranslation()\n\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const {error, loading, products, pages, page} = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n        \n\n    },[dispatch, keyword])\n\n\n    return (\n        <div>\n            {!keyword && <ProductCarousel/>}\n            \n            <h2>{t(\"Latest Products\")}</h2>\n            {loading ? <Loader />\n                :error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {products.map(product => (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Product product={product}/>\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate pages={pages} page={page} keyword={keyword}/>\n                    </div>\n        }\n            \n        </div>\n    )\n}\n\nexport default HomeScreen\n","import React, {useState, useEffect} from 'react'\nimport{ useTranslation } from 'react-i18next'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport {Row, Col, Image, Card, ListGroup, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\n\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport {PRODUCT_CREATE_REVIEW_RESET} from '../constants/productConstants'\n\n\n\nfunction ProductScreen({ match, history }) {\n    const {t, i18n} = useTranslation()\n\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const {loading, error, product} = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {loading:loadingProductReview, error: errorProductReview, success: successProductReview} = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    },[dispatch, match, successProductReview])\n\n    const addToCartHendler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-dark my-3'>{t(\"goBack\")}</Link> <br/>\n\n            {loading ?\n                <Loader />\n                :error\n                    ? <Message variant='danger'>{error}</Message>\n                :(\n                    <div>\n                        <Row>\n                            <Col md={6}>\n                                <Image src={product.image} alt={product.name} fluid />\n                            </Col>\n\n                            <Col md={3}>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <h3>{product.name}</h3>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        {t(\"price\")}: $ {product.price}\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        Description: {product.description}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n\n                            <Col md={3}>\n                                <Card>\n                                    <ListGroup>\n                                        <ListGroup variant=\"flush\">\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>{t(\"price\")}:</Col>\n                                                    <Col>\n                                                        <strong>$ {product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>{t(\"status\")}:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? t(\"In Stock\") : t(\"Out of Stock\")}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>{t(\"Qty\")}</Col>\n                                                        <Col xs='auto' className='my-2'>\n                                                            <Form.Select\n                                                                as='select'\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n                                                            </Form.Select>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n                                            <ListGroup.Item>\n                                                <Button \n                                                onClick={addToCartHendler}\n                                                className=\" product-btn btn-black\" \n                                                disabled={product.countInStock <= 0} \n                                                type=\"button\">\n                                                    {t(\"Add to Cart\")} \n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </ListGroup>\n                                </Card>\n                            </Col>\n                        </Row>  \n                        <Row>\n                            <Col md={6}>\n                                <h4 className='my-3'>{t(\"Reviews\")}</h4>\n                                {product.reviews.length === 0 && <Message variant='info'>No reviews</Message>}\n                                <ListGroup variant='flush'>\n                                    {product.reviews.map((review) => (\n                                        <ListGroup.Item key={review._id}>\n                                            <strong>{review.name}</strong>\n                                            <Rating value={review.rating} color='#f8e825'/>\n                                            <p>{t(\"date\")}: {review.createdAt.substring(0,10)}</p>\n                                            <p>{review.comment}</p>\n                                        </ListGroup.Item>\n                                    ))}\n\n\n                                    <ListGroup>\n                                    <h4 className='my-3'>{t(\"Write a reviews\")}</h4>\n                                        {loadingProductReview && <Loader />}\n                                        {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                        {userInfo ? (\n                                            <Form onSubmit={submitHandler}>\n                                                <Form.Group controlId='rating'>\n                                                    <Form.Label>{t(\"Rating\")}</Form.Label>\n                                                    <Form.Control\n                                                        as='select'\n                                                        value={rating}\n                                                        onChange={(e) => setRating(e.target.value)}\n                                                    >\n                                                        <option value=''>Select...</option>\n                                                        <option value='1'>1 - Poor</option>\n                                                        <option value='2'>2 - Fair</option>\n                                                        <option value='3'>3 - Good</option>\n                                                        <option value='4'>4 - Very Good</option>\n                                                        <option value='5'>5 - Excellent</option>\n                                                    </Form.Control>\n                                                </Form.Group>\n\n                                                <Form.Group className='my-3' controlId='comment'>\n                                                    <Form.Label>{t(\"Review\")}</Form.Label>\n                                                    <Form.Control\n                                                        as='textarea'\n                                                        row='5'\n                                                        value={comment}\n                                                        onChange={(e) => setComment(e.target.value)}\n                                                    ></Form.Control>\n                                                </Form.Group>\n\n                                                <Button\n                                                    disabled={loadingProductReview}\n                                                    type='submit'\n                                                    variant='primary'\n                                                >\n                                                    {t(\"submit\")} \n                                                </Button>\n\n                                            </Form>\n                                        ):(\n                                            <Message variant='info'>Please <Link to='/login'> login</Link> to write a review</Message>\n                                        )}    \n                                    </ListGroup>\n                                </ListGroup>\n                            </Col>\n                        </Row>\n                    </div>\n                )\n            }\n\n            \n        </div>\n    )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport { \n    CART_ADD_ITEM, \n    CART_REMOVE_ITEM, \n    CART_SAVE_SHIPPING_ADDRES,\n\n    CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\n// adding items to cart-----------------------------------------------------------------------------------------------------------------\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const {data} = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload:{\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty \n        }\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n// removing items from cart---------------------------------------------------------------------------------------------------------------\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n// saving shipping address----------------------------------------------------------------------------------------------------------------\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRES,\n        payload: data,\n    })\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\n// saving payment method-------------------------------------------------------------------------------------------------------------------\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n\n\n\n","import React, {useEffect} from 'react'\nimport{ useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({match, location, history}) {\n    const {t, i18n} = useTranslation()\n\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const {cartItems} = cart\n    console.log('cartItems:', cartItems)\n\n    useEffect(() => {\n        if(productId){\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHendler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            {/* <Row>\n            <h2>Shopping Cart</h2><br/>\n\n                <Link to='/'>\n                <Button\n                    type='button'\n                    variant='dark'\n                    >\n                        Continue To Shopping\n                    </Button>\n                </Link>\n            </Row> */}\n\n            <Row>\n                <Col md={8}>\n                    {cartItems.length === 0 ? (\n                        <Message variant='info'>\n                            {t(\"Your cart is empty\")} <Link to='/'>{t(\"goBack\")}</Link>\n                        </Message>\n                    ): (\n                        <ListGroup variant='flash'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n\n                                        <Col md={2}>\n                                            ${item.price}\n                                        </Col>\n\n                                        <Col md={3}>\n                                            <Form.Control\n                                                as='select'\n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                            >\n                                                {\n                                                    [...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))\n                                                }\n                                            </Form.Control>\n                                        </Col>\n\n                                        <Col md={1}>\n                                            <Button\n                                            type='button'\n                                            variant='light'\n                                            onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h3>{t(\"Subtotal\")} ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) {t(\"items\")}</h3>\n                                ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                            </ListGroup.Item>\n                        </ListGroup>\n\n                        <ListGroup.Item>\n                            <Button\n                                type='button'\n                                className='product-btn btn-block'\n                                disabled={cartItems.length === 0}\n                                onClick={checkoutHendler}\n                            >\n                                {t(\"Proceed To Checkout\")} \n                            </Button>\n                        </ListGroup.Item>\n                    </Card>\n                </Col>\n            </Row>\n        </Row>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React from 'react'\nimport{ useTranslation } from 'react-i18next'\nimport {Nav} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n    const {t, i18n} = useTranslation()\n    return (\n        <Nav className='justify-content-center mb-4'>\n\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>{t(\"login\")}</Nav.Link>\n                    </LinkContainer>\n                ): (\n                    <Nav.Link disabled>{t(\"login\")}</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>{t(\"shipping\")}</Nav.Link>\n                    </LinkContainer>\n                ): (\n                    <Nav.Link disabled>{t(\"shipping\")}</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>{t(\"payment\")}</Nav.Link>\n                    </LinkContainer>\n                ): (\n                    <Nav.Link disabled>{t(\"payment\")}</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>{t(\"Place order\")}</Nav.Link>\n                    </LinkContainer>\n                ): (\n                    <Nav.Link disabled>{t(\"Place order\")}</Nav.Link>\n                )}\n            </Nav.Item>\n\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, {useState, } from 'react' //useEffect\nimport{ useTranslation } from 'react-i18next'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({history}) {\n    const {t, i18n} = useTranslation()\n\n    const cart = useSelector(state => state.cart)\n    const {shippingAddress} = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if(!shippingAddress.address){\n        history.push(`/shipping`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push(`/placeorder`)\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>{t(\"Select Method\")}</Form.Label>\n\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Cart'\n                            id='paypal'\n                            name='peymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value) }\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button className='mt-2' type='submit' variant='primary'>\n                    {t(\"Continue\")} \n                </Button>\n            </Form>\n\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, {useState, } from 'react' //useEffect\nimport{ useTranslation } from 'react-i18next'\nimport { Form, Button } from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({history}) {\n    const {t, i18n} = useTranslation()\n\n    const cart = useSelector(state => state.cart)\n    const {shippingAddress} = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\n        history.push('/payment')\n    }\n\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2/>\n            <h2>{t(\"shipping address\")}</h2>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"address\">\n                    <Form.Label>{t(\"Address\")}</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        placeholder=\"Enter address\"\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"city\">\n                    <Form.Label>{t(\"City\")}</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        placeholder=\"Enter city\"\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"postalCode\">\n                    <Form.Label>{t(\"Postal Code\")}</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        placeholder=\"Enter postalCode\"\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"country\">\n                    <Form.Label>{t(\"Country\")}</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        placeholder=\"Enter country\"\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button className=\"product-btn\" type='submit' variant='primary'>\n                    {t(\"Continue\")} \n                </Button>\n\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useEffect } from 'react'\nimport{ useTranslation } from 'react-i18next'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport {useDispatch, useSelector } from 'react-redux' //\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n    const {t, i18n} = useTranslation() \n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const {order, error, success} = orderCreate\n\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shipingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.002) * cart.itemsPrice).toFixed(2)\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shipingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if(success){\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [dispatch, success, history, order])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems:cart.cartItems,\n            shippingAddress:cart.shippingAddress,\n            paymentMethod:cart.paymentMethod,\n            itemsPrice:cart.itemsPrice,\n            shipingPrice:cart.shipingPrice,\n            taxPrice:cart.taxPrice,\n            totalPrice:cart.totalPrice,\n        }))\n    }\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>{t(\"shipping address\")}</h2>\n\n                            <p>\n                                <strong>{t(\"address\")}: </strong>\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode}.\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>{t(\"Payment Method\")}</h2>\n\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>{t(\"Order Items\")}</h2>\n                            {cart.cartItems.length === 0 ? <Message variant=\"info\">\n                                {t(\"your cart is empty\")} \n                            </Message>: (\n                                <ListGroup variant=\"flush\">\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                \n                                                <Col md={2}>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Link>\n                                                </Col>\n                                                \n                                                <Col >\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                \n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item>\n                                <h2>{t(\"total\")}</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>{t(\"items\")}: </Col>\n                                    <Col>$ {cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>{t(\"shipping\")}: </Col>\n                                    <Col>$ {cart.shipingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>{t(\"tax\")}: </Col>\n                                    <Col>$ {cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>{t(\"total\")}: </Col>\n                                    <Col>$ {cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button \n                                type=\"button\"\n                                className=\"product-btn\"\n                                disabled={cart.cartItems <= 0}\n                                onClick={placeOrder}\n                                >\n                                    {t(\"Place order\")} \n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","import axios from 'axios'\nimport { \n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAIL_REQUEST,\n    ORDER_DETAIL_SUCCESS,\n    ORDER_DETAIL_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n } from '../constants/orderConstants'\n\n import { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n// for creating order ----------------------------------------------------------------------------------------------------------------\nexport const createOrder = (order) => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.post(\n            `api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,  //maight be it shuld be (USER_UPDATE_PROFILE_RESET)\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    }catch(error){\n        \n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// for displaing details of order --------------------------------------------------------------------------------------------------------\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: ORDER_DETAIL_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n\n        dispatch({\n            type: ORDER_DETAIL_SUCCESS,\n            payload: data\n        })\n\n\n    }catch(error){\n        \n        dispatch({\n            type: ORDER_DETAIL_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// for pay order --------------------------------------------------------------------------------------------------------------------------\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    }catch(error){\n        \n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// for deliver order ----------------------------------------------------------------------------------------------------------------------\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    }catch(error){\n        \n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// for displaing all orders of user ------------------------------------------------------------------------------------------------------\nexport const listMyOrders = () => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    }catch(error){\n        \n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// for displaing all orders ------------------------------------------------------------------------------------------------------\nexport const listOrders = () => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    }catch(error){\n        \n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","import React, { useState, useEffect} from 'react'\nimport{ useTranslation } from 'react-i18next'\nimport { Row, Col, ListGroup, Image, Button, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {useDispatch, useSelector } from 'react-redux' \nimport { getOrderDetails, payOrder, deliverOrder, } from '../actions/orderActions'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\n\nfunction OrderScreen({ match, history }) {\n    const {t, i18n} = useTranslation() \n\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const {order, error, loading} = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const {loading:loadingPay, success:successPay} = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const {loading:loadingDeliver, success:successDeliver} = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n    \n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    } \n\n// AQHrbC-Z5_Mhsqj1_1N6GHpiNepAXAT9LUFP5RF1BVT0kaCMdSyPefjdbwqEtEzsCfTy1yzWiAhlICRu\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AQHrbC-Z5_Mhsqj1_1N6GHpiNepAXAT9LUFP5RF1BVT0kaCMdSyPefjdbwqEtEzsCfTy1yzWiAhlICRu' // this shuld be hide!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n        if(!userInfo){\n            history.push('/login')\n        }\n        if(!order || successPay || order._id!==Number(orderId) || successDeliver){\n            dispatch({type:ORDER_PAY_RESET})\n            dispatch({type:ORDER_DELIVER_RESET})\n            dispatch(getOrderDetails(orderId))\n        }else if(!order.isPaid){\n            if(!window.paypal){\n                addPayPalScript()\n            }else{\n                setSdkReady(true)\n            }\n        }\n        \n    }, [history, userInfo, successPay, dispatch, order, orderId, successDeliver])\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n        <div>\n            <h2>{t(\"order\")}: {order._id}</h2>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>{t(\"shipping\")}</h2>\n                            <p><strong>{t(\"name\")}: </strong>{order.user.name}</p>\n                            <p><strong>{t(\"email\")}: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n\n                            <p>\n                                <strong>{t(\"shipping address\")}: </strong>\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\n                                {'  '}\n                                {order.shippingAddress.postalCode}.\n                                {'  '}\n                                {order.shippingAddress.country}\n                            </p>\n                            {order.isDelivered ? (\n                                <Message variant=\"success\">{t(\"Delivered on\")} {order.deliveredAt}</Message>\n                            ) : (\n                                    <Message variant=\"warning\">{t(\"Not Delivered\")}</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>{t(\"Payment Method\")}</h2>\n\n                            <p>\n                                <strong>{t(\"method\")}: </strong>\n                                {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? (\n                                <Message variant=\"success\">{t(\"Paid on\")}: {order.paidAt.substring(0, 16)}</Message>\n                            ) : (\n                                <Message variant=\"warning\">{t(\"Not Paid\")}</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>{t(\"Order Items\")}</h2>\n                            {order.orderItems.length === 0 ? <Message variant=\"info\">\n                                {t(\"your order is empty\")} \n                            </Message>: (\n                                <ListGroup variant=\"flush\">\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                \n                                                <Col md={2}>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Link>\n                                                </Col>\n                                                \n                                                <Col >\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                \n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item>\n                                <h2>{t(\"total\")}</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>{t(\"Order Items\")}: </Col>\n                                    <Col>$ {order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>{t(\"shipping\")}: </Col>\n                                    <Col>$ {order.shipingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>{t(\"tax\")}: </Col>\n                                    <Col>$ {order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>{t(\"total\")}: </Col>\n                                    <Col>$ {order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n\n                                    {!sdkReady ? (\n                                        <Loader />\n                                    ):(\n                                        <PayPalButton \n                                            amount={order.totalPrice}\n                                            onSuccess={successPaymentHandler}\n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n\n                        </ListGroup>\n\n                        {loadingDeliver && <Loader/>}\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                            <ListGroup.Item variant=\"flush\">\n                                <Button\n                                    type='button'\n                                    className='btn product-btn'\n                                    onClick={deliverHandler}\n                                >\n                                    Mark as delivered\n                                </Button>\n                            </ListGroup.Item>\n                        )}\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default OrderScreen\n","import React, {useState, useEffect} from 'react'\nimport{ useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({location, history}) {\n    const {t, i18n} = useTranslation()\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h2>{t(\"sign in\")}</h2>\n            {error && <Message variant='danger' >{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"email\">\n                    <Form.Label>{t(\"email\")}</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"example@gmail.com\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"password\">\n                    <Form.Label>{t(\"password\")}</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"enter password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type=\"submit\" variant=\"primary\">\n                    {t(\"sign in\")} \n                </Button>\n            </Form>\n\n            <Row className=\"py-3\">\n                <Col>\n                    {t(\"New Customer\")} <Link \n                    to={redirect ? `/register?redirect=${redirect}` : '/register'}>{t(\"Register\")}</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, {useState, useEffect} from 'react'\nimport{ useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({location, history}) {\n    const {t, i18n} = useTranslation()\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        }else{\n            dispatch(register(name, email, password, confirmPassword, message))\n        }\n    }\n\n    return (\n        <FormContainer>\n            <h2>{t(\"Register\")}</h2>\n            {message && <Message variant='danger' >{message}</Message>}\n            {error && <Message variant='danger' >{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId=\"name\">\n                    <Form.Label>{t(\"name\")}</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"name\"\n                        placeholder=\"Enter your name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"email\">\n                    <Form.Label>{t(\"email\")}</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"email\"\n                        placeholder=\"example@gmail.com\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>{t(\"password\")}</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"password\"\n                        placeholder=\"enter password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group  className='mb-3' controlId=\"confirmPassword\">\n                    <Form.Label>{t(\"confirm password\")}</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"password\"\n                        placeholder=\"confirm your password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type=\"submit\" variant=\"primary\">\n                    {t(\"Register\")} \n                </Button>\n\n            </Form>\n\n            <Row className=\"py-3\">\n                <Col>\n                    {t(\"Have An Account\")} <Link \n                    to={redirect ? `/login?redirect=${redirect}` : '/login'}>{t(\"sign in\")}</Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React, {useState, useEffect} from 'react'\nimport{ useTranslation } from 'react-i18next'\n//import { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n    const {t, i18n} = useTranslation()\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading:loadingOrders, error:errorOrders, orders } = orderListMy\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        }else{\n            if(!user || !user.name || success || userInfo._id !== user._id){\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            }else{\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        }else{\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password,\n            }))\n            setMessage('')\n        }\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>{t(\"User Profile\")}</h2>\n                {message && <Message variant='danger' >{message}</Message>}\n            {error && <Message variant='danger' >{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId=\"name\">\n                        <Form.Label>{t(\"name\")}</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"name\"\n                        placeholder=\"Enter your name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"email\">\n                    <Form.Label>{t(\"email\")}</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"email\"\n                        placeholder=\"example@gmail.com\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>{t(\"password\")}</Form.Label>\n                    <Form.Control\n                        \n                        type=\"password\"\n                        placeholder=\"enter password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n                    <Form.Label>{t(\"confirm password\")}</Form.Label>\n                    <Form.Control\n                        \n                        type=\"password\"\n                        placeholder=\"confirm your password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type=\"submit\" variant=\"primary\">\n                    {t(\"update\")} \n                </Button>\n\n            </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>{t(\"My Orders\")}</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ):errorOrders ? (\n                    <Message>{errorOrders}</Message>\n                ):(\n                    <Table striped responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>id</th>\n                                <th>{t(\"date\")}</th>\n                                <th>{t(\"total\")}</th>\n                                <th>{t(\"paid\")}</th>\n                                <th>{t(\"delivered\")}</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>$ {order.totalPrice}</td>\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\n                                    )}</td>\n                                    <td>{order.isDelivered ? (\n                                        order.deliveredAt.substring(0, 10)\n                                    ):(\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\n                                    )}</td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button className='btn-sm'>{t(\"details\")}</Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","import React, {useEffect} from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport{ useTranslation } from 'react-i18next'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listUsers, deleteUser } from'../actions/userActions'\n\n\nfunction UserListScreen({ history }) {\n    const {t, i18n} = useTranslation()\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success:successDelete } = userDelete\n\n    useEffect(() => {\n        if(userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        }else{\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo, successDelete ])\n\n    const deleteHandler = (id) => {\n        if(window.confirm('Are you shure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h2>{t('users')}</h2>\n            {loading \n                ? (<Loader />)\n                : error\n                    ?(<Message variant='danger'>{error}</Message>)\n                    : (\n                    <Table striped dordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>{t('name')}</th>\n                                <th>{t('email')}</th>\n                                <th>{t('admin')}</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {users.map(user => (\n                                <tr key={user._id}>\n                                    <td>{user._id}</td>\n                                    <td>{user.name}</td>\n                                    <td>{user.email}</td>\n                                    <td>{user.isAdmin ? (\n                                        <i className='fas fa-check' style={{color: 'green'}}></i>\n                                    ):(\n                                        <i className='fas fa-check' style={{color: 'red'}}></i>\n                                    )}</td>\n\n                                    <td>\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                            <Button variant='dark' className='btn-sm'>\n                                                <i className='fas fa-edit'></i>\n                                            </Button>\n\n                                        </LinkContainer>\n\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </td>\n\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n            )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, {useEffect} from 'react'\nimport{ useTranslation } from 'react-i18next'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listOrders } from'../actions/orderActions'\n\n\nfunction OrderListScreen({ history }) {\n    const {t, i18n} = useTranslation()\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if(userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        }else{\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo ])\n\n\n    return (\n        <div>\n            <h2>{t(\"orders\")}</h2>\n            {loading \n                ? (<Loader />)\n                : error\n                    ?(<Message variant='danger'>{error}</Message>)\n                    : (\n                    <Table striped dordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>{t(\"user\")}</th>\n                                <th>{t(\"date\")}</th>\n                                <th>{t(\"total\")}</th>\n                                <th>{t(\"paid\")}</th>\n                                <th>{t(\"delivered\")}</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.user && order.user.name}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>$ {order.totalPrice}</td>\n                                    <td>{order.isPaid ? (\n                                        order.paidAt.substring(0, 10)\n                                    ):(\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\n                                    )}</td>\n\n                                    <td>{order.isDelivered ? (\n                                        order.deliveredAt.substring(0, 10)\n                                    ):(\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\n                                    )}</td>\n\n\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}/`}>\n                                            <Button variant='dark' className='btn-sm'>\n                                                {t(\"details\")} \n                                            </Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n            )}\n        </div>\n    )\n}\n\nexport default OrderListScreen\n","import React, {useEffect} from 'react'\nimport{ useTranslation } from 'react-i18next'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport {PRODUCT_CREATE_RESET} from '../constants/productConstants'\n\n\nfunction ProductListScreen({ history, match }) {\n    const {t, i18n} = useTranslation()\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n        if(!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if(successCreate){\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        }else{\n            dispatch(listProducts(keyword))\n        }\n    }, [dispatch, history, userInfo, keyword, successDelete, successCreate, createdProduct])\n\n    const deleteHandler = (id) => {\n        if(window.confirm('Are you shure you want to delete this product ?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h2>{t(\"products\")}</h2>\n                </Col>\n                <Col className='text-right'>\n                    <Button className='my-3' style={{float: 'right'}} onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> {t(\"Create Product\")}\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading \n                ? (<Loader />)\n                : error\n                    ?(<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped dordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>{t(\"productName\")}</th>\n                                        <th>{t(\"price\")}</th>\n                                        <th>{t(\"category\")}</th>\n                                        <th>{t(\"brand\")}</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>$ {product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='dark' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true}/>\n                        </div>\n\n            )}\n        </div>\n    )\n}\n\nexport default ProductListScreen\n","import React, {useState, useEffect} from 'react'\nimport{ useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({match, history}) {\n    const {t, i18n} = useTranslation()\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error:errorUpdate, loading:loadingUpdate, success:successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if(successUpdate){\n            dispatch({type: USER_UPDATE_RESET})\n            history.push('/admin/userlist')\n        }else{\n            if(!user.name || user._id !== Number(userId)){\n                dispatch(getUserDetails(userId))\n            }else{\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [dispatch, user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({_id:user._id, name, email, isAdmin}))\n    }\n\n    return (\n        <div>\n\n            <Link to='/admin/userlist'>\n                {t(\"goBack\")}\n            </Link>\n\n            <FormContainer>\n                <h2>{t(\"Edit user\")}</h2>\n                {loadingUpdate && <Loader/>}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> \n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId=\"name\">\n                                <Form.Label>{t(\"name\")}</Form.Label>\n                                <Form.Control\n                                    type=\"name\"\n                                    placeholder=\"Enter your name\"\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"email\">\n                                <Form.Label>{t(\"email\")}</Form.Label>\n                                <Form.Control\n                                    type=\"email\"\n                                    placeholder=\"example@gmail.com\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"isadmin\">\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label={t(\"admin\")}\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button className=\"mt-3\" type=\"submit\" variant=\"primary\">\n                                {t(\"update\")} \n                            </Button>\n\n                        </Form>\n                )}\n\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default UserEditScreen\n","import React, {useState, useEffect} from 'react'\nimport{ useTranslation } from 'react-i18next'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nfunction ProductEditScreen({match, history}) {\n    const {t, i18n} = useTranslation()\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n    useEffect(() => {\n        if(successUpdate ){\n            dispatch({type: PRODUCT_UPDATE_RESET})\n            history.push(`/admin/productlist`)\n        }else{\n            if(!product.name || product._id !== Number(productId)){\n                dispatch(listProductDetails(productId))\n            }else{\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n            }\n        }\n\n        \n    }, [dispatch, product, productId, history, successUpdate ])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            countInStock,\n            description\n        }))\n    }\n\n    // Need to fix the uploading images of product ////// it was done i fixed that\n        const uploadFileHandler = async (e) => {\n            const file = e.target.files[0]\n            const formData = new FormData()\n\n            formData.append('image', file)\n            formData.append('product_id', productId)\n\n            setUploading(true)\n\n            try {\n                const config = {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                }\n\n                const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n                setImage(data)\n                setUploading(false)\n\n            } catch (error) {\n                setUploading(false)\n            }\n    }\n\n    return (\n        <div>\n\n            <Link to='/admin/productlist'>\n                {t('goBack')}\n            </Link>\n\n            <FormContainer>\n                <h2>{t(\"Edit product\")}</h2>\n                {loadingUpdate && <Loader/>}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> \n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId=\"name\">\n                                <Form.Label>{t(\"productName\")}</Form.Label>\n                                <Form.Control\n                                    type=\"name\"\n                                    placeholder=\"Enter your name\"\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"price\">\n                                <Form.Label>{t(\"price\")}</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    placeholder=\"Enter price\"\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>{t(\"image\")}</Form.Label>\n                                <Form.Control\n                                    type='text'\n                                    placeholder='Enter image'\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                    readOnly\n                                >\n                                </Form.Control>\n\n                                {uploading && <Loader />}\n\n                                <Form.Group controlId=\"formFileMultiple\"  className=\"mb-3\">\n                                    <Form.Control custom onChange={uploadFileHandler} size='sm' type=\"file\" multiple />\n                                </Form.Group>\n\n                            </Form.Group>\n                                                        \n                            <Form.Group controlId=\"brand\">\n                                <Form.Label>{t(\"brand\")}</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter brand\"\n                                    value={brand}\n                                    onChange={(e) => setBrand(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"category\">\n                                <Form.Label>{t(\"category\")}</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter category\"\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"countInStock\">\n                                <Form.Label>{t(\"stock\")}</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    placeholder=\"Enter countInStock\"\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group className='py-3' controlId=\"description\">\n                                <Form.Label>{t(\"description\")}</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter description\"\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Button type=\"submit\" variant=\"primary\">\n                                {t(\"update\")} \n                            </Button>\n\n                        </Form>\n                )}\n\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default ProductEditScreen\n","import {Suspense} from 'react'\nimport { Container,  } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\n\nimport i18n from'./i18n'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <main className='py-3'>\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}