{"ast":null,"code":"var _jsxFileName = \"/home/john/projects/ecom/frontend/src/screens/RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterScreen({\n  location,\n  history\n}) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    error,\n    loading,\n    userInfo\n  } = userRegister;\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(register(name, email, password, confirmPassword, message));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"name\",\n          placeholder: \"Enter your name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"email\",\n          placeholder: \"example@gmail.com\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"password\",\n          placeholder: \"enter password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"password\",\n          placeholder: \"confirm your password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [\"Have An Account ? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: redirect ? `/login?redirect=${redirect}` : '/login',\n          children: \"sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterScreen, \"M0yz8IUSErD0MDxj/xU1+ioDplw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["/home/john/projects/ecom/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","Loader","Message","FormContainer","useDispatch","useSelector","register","RegisterScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","redirect","search","split","userRegister","state","error","loading","userInfo","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({location, history}) {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        }else{\n            dispatch(register(name, email, password, confirmPassword, message))\n        }\n    }\n\n    return (\n        <FormContainer>\n            <h2>Register</h2>\n            {message && <Message variant='danger' >{message}</Message>}\n            {error && <Message variant='danger' >{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"name\"\n                        placeholder=\"Enter your name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"email\"\n                        placeholder=\"example@gmail.com\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"password\"\n                        placeholder=\"enter password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"confirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type=\"password\"\n                        placeholder=\"confirm your password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type=\"submit\" variant=\"primary\">\n                    update\n                </Button>\n\n            </Form>\n\n            <Row className=\"py-3\">\n                <Col>\n                    Have An Account ? <Link \n                    to={redirect ? `/login?redirect=${redirect}` : '/login'}>sign in</Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n"]},"metadata":{},"sourceType":"module"}