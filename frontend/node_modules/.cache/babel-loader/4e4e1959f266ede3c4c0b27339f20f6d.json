{"ast":null,"code":"import _slicedToArray from\"/home/john/projects/for_deploy/ecom/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{Form,Button}from'react-bootstrap';import Loader from'../components/Loader';import Message from'../components/Message';import FormContainer from'../components/FormContainer';import{useDispatch,useSelector}from'react-redux';import{getUserDetails,updateUser}from'../actions/userActions';import{USER_UPDATE_RESET}from'../constants/userConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function UserEditScreen(_ref){var match=_ref.match,history=_ref.history;var userId=match.params.id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setIsAdmin=_useState6[1];var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var error=userDetails.error,loading=userDetails.loading,user=userDetails.user;var userUpdate=useSelector(function(state){return state.userUpdate;});var errorUpdate=userUpdate.error,loadingUpdate=userUpdate.loading,successUpdate=userUpdate.success;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});history.push('/admin/userlist');}else{if(!user.name||user._id!==Number(userId)){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[dispatch,user,userId,successUpdate,history]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({_id:user._id,name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",children:\"Go back\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit user\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter your name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"example@gmail.com\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isadmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"is Admin\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]})]});}export default UserEditScreen;","map":{"version":3,"sources":["/home/john/projects/for_deploy/ecom/backend/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Loader","Message","FormContainer","useDispatch","useSelector","getUserDetails","updateUser","USER_UPDATE_RESET","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","error","loading","user","userUpdate","errorUpdate","loadingUpdate","successUpdate","success","type","push","_id","Number","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({match, history}) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error:errorUpdate, loading:loadingUpdate, success:successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if(successUpdate){\n            dispatch({type: USER_UPDATE_RESET})\n            history.push('/admin/userlist')\n        }else{\n            if(!user.name || user._id !== Number(userId)){\n                dispatch(getUserDetails(userId))\n            }else{\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [dispatch, user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({_id:user._id, name, email, isAdmin}))\n    }\n\n    return (\n        <div>\n\n            <Link to='/admin/userlist'>\n                Go back\n            </Link>\n\n            <FormContainer>\n                <h2>Edit user</h2>\n                {loadingUpdate && <Loader/>}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> \n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId=\"name\">\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n                                    type=\"name\"\n                                    placeholder=\"Enter your name\"\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"email\">\n                                <Form.Label>Email address</Form.Label>\n                                <Form.Control\n                                    type=\"email\"\n                                    placeholder=\"example@gmail.com\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"isadmin\">\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label=\"is Admin\"\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type=\"submit\" variant=\"primary\">\n                                Update\n                            </Button>\n\n                        </Form>\n                )}\n\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default UserEditScreen\n"]},"metadata":{},"sourceType":"module"}