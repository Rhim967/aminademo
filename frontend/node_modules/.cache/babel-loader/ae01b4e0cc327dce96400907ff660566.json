{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAIL_REQUEST, ORDER_DETAIL_SUCCESS, ORDER_DETAIL_FAIL } from '../constants/orderConstants';\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'; // for creating order ----------------------------------------------------------------------------------------------------------------\n\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`api/orders/add/`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      //maight be it shuld be (USER_UPDATE_PROFILE_RESET)\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n}; // for creating displaing details of order ------------------------------------------------------------------------------------------\n\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`api/orders/add/`, order, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      //maight be it shuld be (USER_UPDATE_PROFILE_RESET)\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/john/projects/ecom/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAIL_REQUEST","ORDER_DETAIL_SUCCESS","ORDER_DETAIL_FAIL","CART_CLEAR_ITEMS","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","response","detail","message","getOrderDetails","id","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAKIC,oBALJ,EAMIC,oBANJ,EAOIC,iBAPJ,QAQQ,6BARR;AAUC,SAASC,gBAAT,QAAiC,4BAAjC,C,CAED;;AACA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAEhE,MAAG;AAECD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEX;AADD,KAAD,CAAR;AAIA,UAAM;AACFY,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADT,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAOA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMnB,KAAK,CAACoB,IAAN,CAChB,iBADgB,EAEjBX,KAFiB,EAGjBM,MAHiB,CAArB;AAMAL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEV,oBADD;AACwB;AAC7BmB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAT,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,gBADD;AAELc,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AAGH,GApCD,CAoCC,OAAMC,KAAN,EAAY;AAETd,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAET,iBADD;AAELkB,MAAAA,OAAO,EAAEG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,MAAtC,GACHF,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,MADjB,GAEHF,KAAK,CAACG;AAJP,KAAD,CAAR;AAMH;AACJ,CA/CM,C,CAiDP;;AACA,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ,OAAOnB,QAAP,EAAiBC,QAAjB,KAA8B;AAEjE,MAAG;AAECD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEkB;AADD,KAAD,CAAR;AAIA,UAAM;AACFjB,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADT,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAOA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMnB,KAAK,CAACoB,IAAN,CAChB,iBADgB,EAEjBX,KAFiB,EAGjBM,MAHiB,CAArB;AAMAL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEmB,qBADD;AACyB;AAC9BV,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAT,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,gBADD;AAELc,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AAGH,GApCD,CAoCC,OAAMC,KAAN,EAAY;AAETd,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEoB,kBADD;AAELX,MAAAA,OAAO,EAAEG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,MAAtC,GACHF,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,MADjB,GAEHF,KAAK,CAACG;AAJP,KAAD,CAAR;AAMH;AACJ,CA/CM","sourcesContent":["import axios from 'axios'\nimport { \n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAIL_REQUEST,\n    ORDER_DETAIL_SUCCESS,\n    ORDER_DETAIL_FAIL,\n } from '../constants/orderConstants'\n\n import { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n// for creating order ----------------------------------------------------------------------------------------------------------------\nexport const createOrder = (order) => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.post(\n            `api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,  //maight be it shuld be (USER_UPDATE_PROFILE_RESET)\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    }catch(error){\n        \n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// for creating displaing details of order ------------------------------------------------------------------------------------------\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n\n    try{\n        \n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.post(\n            `api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,  //maight be it shuld be (USER_UPDATE_PROFILE_RESET)\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    }catch(error){\n        \n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}